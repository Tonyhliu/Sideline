c
comment.story
@story
comment
c
search_params
c
search_params
searcH-params
c
search_params
c
search_params
c
!params[:query].empty?
params[:query]
 search_params
c
params.permit(:query, :format)
params.permit(:query, :format))
params.permit(:query)
params
c
params[:title]
params.title
:title
params
this
c
quit
search_params
@stories
c
@stories
story_params
q
search_params
c
search_params
@stories
c
Story.where(search_params)
@stories
search_params
c
Story.where(search_params)
@stories
search_params
c
search_params
c
search_params
@stories
c
search_params
@stories
c
@stories
search_params
c
search_params
c
search_params
c
search_params
c
search_params
@stories
c
@user
c
@user.username.split.include?(" ")
"a".to_a
@user.username.to_a.include?(" ")
@user.username.to_a.includes?(" ")
@user.username.includes?(" ")
@user.username
@user
c
@story.update(story_params)
c
@story.update_attributes(story_params)
@story.update(story_params)
story_params
@story
quit
ENV["testing"]
Figaro.env.testing
Figaro.env
ENV["CLOUD_NAME"]
ENV[CLOUD_NAME"]
ENV['CLOUD_NAME']
ENV
quit
ENV
Figaro.env['CLOUD_NAME']
Figaro.env
Figaro.env.UPLOAD_PRESET
Figaro.env
ENV['CLOUD_NAME']
ENV[CLOUD_NAME]
ENV
quit
ENV['CLOUD_NAME']
ENV
cloud_name
c
current_user
c
current_user
@user
c
s
@user
s
current_user
@user
c
current_user
@user
c
User.all
current_user
@user
c
current_user
@user
@user.session_token
@user
c
session[:session_token]
User.find_by(session_token: session[:session_token])
User.all
current_user
@user
c
@user
c
current_user
@user
quit
